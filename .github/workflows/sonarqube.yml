name: CI/CD Pipeline - Code Quality and Security

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  analyze_and_check_quality:
    runs-on: ubuntu-latest

    # Set permissions for GitHub Actions to interact with checks/statuses
    permissions:
      contents: read
      packages: read
      # The check-quality-gate action needs write permission for checks to update PR status
      checks: write
      pull-requests: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Disabling shallow clone is crucial for SonarQube to perform a full analysis
          fetch-depth: 0 
      
      - name: Set up JDK 17 (Example for Java projects)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      # ----------------------------------------------------------------------
      # 1. Run SonarQube Analysis
      # ----------------------------------------------------------------------
      - name: SonarQube Analysis
        # Use the correct official action for running the scan
        uses: SonarSource/sonarqube-scan-action@main
        env:
          # Your SonarQube/SonarCloud credentials and server URL
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          # Pass the project key as an additional parameter
          projectBaseDir: ${{ github.workspace }}
          args: >
            -Dsonar.projectKey=YOUR_PROJECT_KEY
            -Dsonar.sources=.

      # ----------------------------------------------------------------------
      # 2. Check SonarQube Quality Gate Status (Corrected Action)
      # ----------------------------------------------------------------------
      - name: SonarQube Quality Gate Check
        id: quality_gate_check
        # Use the correct official action for checking the Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@main
        # The 'env' block must contain credentials for this step to connect
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          
      # ----------------------------------------------------------------------
      # 3. Run SOOS Analysis (Corrected Action - Assuming this is the current one)
      # ----------------------------------------------------------------------
      - name: SOOS Analysis (Dependency Vulnerabilities)
        # Replaced the incorrect 'soos/soos-github-action' with the confirmed repository
        uses: soos-io/soos-ci-github-action@v2
        env:
          # SOOS specific secrets required for authentication
          SOOS_CLIENT_ID: ${{ secrets.SOOS_CLIENT_ID }}
          SOOS_API_KEY: ${{ secrets.SOOS_API_KEY }}
        with:
          project_name: 'My-SOOS-Project'
          branch_name: ${{ github.ref_name }}

      # ----------------------------------------------------------------------
      # 4. Optional: Fail the build if the Quality Gate is NOT GREEN
      # ----------------------------------------------------------------------
      - name: Fail build on Quality Gate failure
        if: steps.quality_gate_check.outputs.quality-gate-status != 'OK'
        run: |
          echo "SonarQube Quality Gate did not pass. Failing the build."
          exit 1
